var documenterSearchIndex = {"docs":
[{"location":"#BisectPy.jl-1","page":"Home","title":"BisectPy.jl","text":"","category":"section"},{"location":"#Manual-Outline-1","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n    \"Bisect.md\"\n    \"Insort.md\"\n]\nDepth = 3","category":"page"},{"location":"#main-index-1","page":"Home","title":"Index","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"Bisect/#Bisect-1","page":"Bisect","title":"Bisect","text":"","category":"section"},{"location":"Bisect/#","page":"Bisect","title":"Bisect","text":"CurrentModule = BisectPy.Bisect","category":"page"},{"location":"Bisect/#","page":"Bisect","title":"Bisect","text":"bisect_left(a, x, lo=1, hi=length(a))\n\nbisect_right(a, x, lo=1, hi=length(a))","category":"page"},{"location":"Bisect/#BisectPy.Bisect.bisect_left","page":"Bisect","title":"BisectPy.Bisect.bisect_left","text":"bisect_left(a, x, lo=1, hi=length(a))\n\nReturn the index where to insert item x in array a, assuming a is in an non-decreasing order.\n\nThe return value i is such that all e in a[:(i - 1)] have e < x, and all e in a[i:] have e >= x.  So if x already appears in the array, insert!(a, i, x) will insert just before the leftmost x already there.\n\nArguments\n\nOptional args lo (default 1) and hi (default length(a)) bound the slice of a to be searched.\n\nExamples\n\njulia> bisect_left([1, 2, 3, 4, 5], 3.5)\n4\n\njulia> bisect_left([1, 2, 3, 4, 5], 2)\n2\n\njulia> bisect_left([1, 2, 3, 3, 3, 5], 3)\n3\n\n\n\n\n\n","category":"function"},{"location":"Bisect/#BisectPy.Bisect.bisect_right","page":"Bisect","title":"BisectPy.Bisect.bisect_right","text":"bisect_right(a, x, lo=1, hi=length(a))\n\nReturn the index where to insert item x in array a, assuming a is in an non-decreasing order.\n\nThe return value i is such that all e in a[:(i - 1)] have e <= x, and all e in a[i:] have e > x.  So if x already appears in the array, insert!(a, i, x) will insert just after the rightmost x already there.\n\nArguments\n\nOptional args lo (default 1) and hi (default length(a)) bound the slice of a to be searched.\n\nExamples\n\njulia> bisect_right([1, 2, 3, 4, 5], 3.5)\n4\n\njulia> bisect_right([1, 2, 3, 4, 5], 2)\n3\n\njulia> bisect_right([1, 2, 3, 3, 3, 5], 3)\n6\n\n\n\n\n\n","category":"function"},{"location":"Insort/#Insort-1","page":"Insort","title":"Insort","text":"","category":"section"},{"location":"Insort/#","page":"Insort","title":"Insort","text":"CurrentModule = BisectPy.Insort","category":"page"},{"location":"Insort/#","page":"Insort","title":"Insort","text":"insort_left(a, x, lo=1, hi=nothing)\n\ninsort_right(a, x, lo=1, hi=nothing)","category":"page"},{"location":"Insort/#BisectPy.Insort.insort_left","page":"Insort","title":"BisectPy.Insort.insort_left","text":"insort_left(a, x, lo=1, hi=nothing)\n\nInsert item x in array a, and keep it sorted assuming a is sorted.\n\nIf x is already in a, insert it to the left of the leftmost x. Optional args lo (default 1) and hi (default length(a)) bound the slice of a to be searched.\n\n\n\n\n\n","category":"function"},{"location":"Insort/#BisectPy.Insort.insort_right","page":"Insort","title":"BisectPy.Insort.insort_right","text":"insort_right(a, x, lo=1, hi=nothing)\n\nInsert item x in array a, and keep it sorted assuming a is sorted.\n\nIf x is already in a, insert it to the right of the rightmost x. Optional args lo (default 1) and hi (default length(a)) bound the slice of a to be searched.\n\n\n\n\n\n","category":"function"}]
}
